"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[6561],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1399:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},l="CS2100 Computer Organisation review",c={permalink:"/blog/2022/06/06/cs2100-review",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-06-cs2100-review.md",source:"@site/blog/2022-06-06-cs2100-review.md",title:"CS2100 Computer Organisation review",description:"Taken in AY21/22 Sem 1 under Profs Colin Tan Keng Yan and Aaron Tan Tuck Choy.",date:"2022-06-06T00:00:00.000Z",formattedDate:"June 6, 2022",tags:[],readingTime:1.265,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"CS2040S Data Structures and Algorithms review",permalink:"/blog/2022/06/07/cs2040s-review"},nextItem:{title:"CS1231S Discrete Structures review",permalink:"/blog/2022/06/05/cs1231s-review"}},u={authorsImageUrls:[]},d=[{value:"Description",id:"description",level:2},{value:"Professors",id:"professors",level:2},{value:"Content",id:"content",level:2},{value:"Workload",id:"workload",level:2},{value:"Conclusion",id:"conclusion",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Taken in AY21/22 Sem 1 under Profs Colin Tan Keng Yan and Aaron Tan Tuck Choy."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.comp.nus.edu.sg/~cs2100/"},"Link to course website")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"This module teaches us about how CPUs and memory work. Topics taught include the C language, the MIPS architecture, processor datapath and control, boolean algebra, logic circuits, pipelining and caching. Performance is included but is not examinable."),(0,a.kt)("h2",{id:"professors"},"Professors"),(0,a.kt)("p",null,"Both professors are highly enthusiastic and I enjoy attending their lectures. However, for efficiency, I mostly read the slides or watch the recordings instead of attending live lectures."),(0,a.kt)("h2",{id:"content"},"Content"),(0,a.kt)("p",null,"There is a decently large amount of content, but they are mostly conceptually mangeable. Personally, I would've liked some of the time spent on C to be spent on other content. The main difficulty of the content lies in that there are a lot of tedious calculations. One must be fast and accurate when doing them."),(0,a.kt)("h2",{id:"workload"},"Workload"),(0,a.kt)("p",null,"Besides midterms and finals, there are 3 graded assignments, weekly tutorials, and weekly labs. Tutorials are not graded but attendance is taken. For labs, students are required to complete a 1-2 page worksheet. Labs are graded and attendance is taken. Overall, I find the workload pretty light. That said, it depends on how quickly one is able to grasp the concepts and do the labs and assignments."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"9/10. This module is vital for any CS student -- especially for one interested in low-latency/concurrent programming. It is also taught by two excellent professors. I enjoyed this module, and am looking forward to CS2106."))}f.isMDXComponent=!0}}]);